[General]
ned-path = .;../inet/src
network = geohttp.GeoAwareHttp
sim-time-limit = 120s

*.configurator.addStaticRoutes = true

# Place mirrors globally (radians)
*.mirror[0].app[0].geoLat = 1.300rad     # ~Singapore (approx radians if you want precise: deg2rad(1.30) but we pass already radians)
*.mirror[0].app[0].geoLon = 1.811rad
*.mirror[1].app[0].geoLat = 0.593rad     # ~34°
*.mirror[1].app[0].geoLon = -2.063rad    # ~-118°
*.mirror[2].app[0].geoLat = 0.899rad     # ~51.5°
*.mirror[2].app[0].geoLon = -0.002rad    # ~-0.1°
*.mirror[3].app[0].geoLat = 0.499rad     # ~28.6°
*.mirror[3].app[0].geoLon = 1.347rad     # ~77.2°

# Reporter mirrors use same coords
for i=0..3 {
    *.mirror[i].app[1].geoLat = ${..app[0].geoLat}
    *.mirror[i].app[1].geoLon = ${..app[0].geoLon}
}

# LB params
*.lb.app[0].mode = "302"
*.lb.app[0].weightDistance = 0.7
*.lb.app[0].weightLoad = 0.3
*.lb.app[0].downPenalty = 10
*.lb.app[0].registryExpiryMs = 5000

# Client geography ~ Dhaka cluster (radians)
*.client[*].app[0].geoLat = normal(0.415, 0.03)     # ~23.8°
*.client[*].app[0].geoLon = normal(1.578, 0.03)     # ~90.4°

# Traffic
*.client[*].app[0].requestInterval = exponential(1s)
*.client[*].app[0].objectSizeBytes = intuniform(20000, 100000)

# Recorders (latency proxy — client inter-send and LB decisions you can add signals for)
record-eventlog = true
**

[Config RoundRobinBaseline]
extends = General
# To emulate RR baseline, you can modify LB to ignore geo (TODO) or duplicate a "RoundRobinLoadBalancerApp"

[Config DNSBaseline]
extends = General
# Fix clients to a region->mirror map by hardcoding respond mirror in LB (TODO)
